version: "3.9"

services:
  apisix-dashboard:
    image: apache/apisix-dashboard:3.0.1-alpine
    restart: always
    volumes:
    - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
    - "9000:9000"
    networks:
      - core
    environment:
      URL_ETCD: ${URL_ETCD}
      APISIX_DASHBOARD_USER: ${APISIX_DASHBOARD_USER}
      APISIX_DASHBOARD_PASSWORD: ${APISIX_DASHBOARD_PASSWORD}


  apisix:
    hostname: apisix
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.6.0-debian}
    restart: always
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "9180:9180/tcp"
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    environment:
      URL_ETCD: ${URL_ETCD}
      URL_EUREKA: ${URL_EUREKA}

    networks:
      - core

  etcd:
    image: bitnami/etcd:3.4.15
    hostname: etcd
    restart: always
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    networks:
      - core

  echoserver:
    image: ealen/echo-server
    hostname: echoserver
    networks:
      - core

  db:
    image: postgres:latest
    restart: always
    hostname: postgres
    environment:
      POSTGRES_AUTH_METHOD: trust
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: keycloak_db

  keycloak:
    image: keycloak/keycloak:20.0
    restart: always
    hostname: keycloak
    ports:
      - "18080:8080"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_SCHEMA: public
      DB_DATABASE: keycloak_db
      DB_USER: admin
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_HOSTNAME: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    networks:
      - core

    depends_on:
      - db
    command:
      - start-dev

  prometheus:
    image: prom/prometheus
    hostname: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - core

  grafana:
    image: grafana/grafana
    hostname: grafana
    ports:
      - "3000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

    networks:
      - core

# QA Deployments
  apisix-dashboard-qa:
    image: apache/apisix-dashboard:3.0.1-alpine
    restart: always
    volumes:
    - ./dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
    - "29000:9000"
    networks:
      - core-qa
    environment:
      URL_ETCD: ${URL_ETCD}
      APISIX_DASHBOARD_USER: ${APISIX_DASHBOARD_USER}
      APISIX_DASHBOARD_PASSWORD: ${APISIX_DASHBOARD_PASSWORD}


  apisix-qa:
    hostname: apisix
    image: apache/apisix:${APISIX_IMAGE_TAG:-3.6.0-debian}
    restart: always
    volumes:
      - ./apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd-qa
    ##network_mode: host
    ports:
      - "29180:9180/tcp"
      - "29080:9080/tcp"
      - "29091:9091/tcp"
      - "29443:9443/tcp"
      - "29092:9092/tcp"
    environment:
      URL_ETCD: ${URL_ETCD}
      URL_EUREKA: ${URL_EUREKA}

    networks:
      - core-qa

  etcd-qa:
    image: bitnami/etcd:3.4.15
    hostname: etcd
    restart: always
    volumes:
      - etcd_data_qa:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://etcd:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    networks:
      - core-qa

  echoserver-qa:
    image: ealen/echo-server
    hostname: echoserver
    networks:
      - core-qa

  db-qa:
    image: postgres:latest
    restart: always
    hostname: postgres
    environment:
      POSTGRES_AUTH_METHOD: trust
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: keycloak_db

  keycloak-qa:
    image: keycloak/keycloak:20.0
    restart: always
    hostname: keycloak
    ports:
      - "28080:8080"
    environment:
      DB_VENDOR: POSTGRES
      DB_ADDR: db
      DB_SCHEMA: public
      DB_DATABASE: keycloak_db
      DB_USER: admin
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      KEYCLOAK_HOSTNAME: keycloak
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_PASSWORD}
    networks:
      - core-qa

    depends_on:
      - db-qa
    command:
      - start-dev

  prometheus-qa:
    image: prom/prometheus
    hostname: prometheus
    ports:
      - "29090:9090"
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - core-qa

  grafana-qa:
    image: grafana/grafana
    hostname: grafana
    ports:
      - "23000:3000"
    restart: unless-stopped
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources

    networks:
      - core-qa

networks:
  core:
    driver: bridge
    external: true

  core-qa:
    driver: bridge
    external: true

volumes:
  etcd_data:
    driver: local
  etcd_data_qa:
    driver: local
